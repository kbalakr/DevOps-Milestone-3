- hosts: nodes
 
  #get the password from command line as a parameter
  vars:
    adminPassword: "{{adminPassword}}"
  tasks: 

  - name: Debug
    debug:
      msg: "{{adminPassword}}"

  - name: print jenkins ip
    debug:
      msg: "{{ groups['nodes'][0] }}"

  - name: Get Jenkins crumb
    uri:
      user: admin
      password: "{{adminPassword}}"
      force_basic_auth: yes
      url: "http://{{ groups['nodes'][0] }}:8080/crumbIssuer/api/json"
      return_content: yes
    register: jenkins_crumb
    until: jenkins_crumb.content.find('Please wait while Jenkins is getting ready to work') == -1
    retries: 10
    delay: 5

  - name: Set crumb token
    set_fact:
      jenkins_crumb_token: "{{ jenkins_crumb.json.crumbRequestField }}={{ jenkins_crumb.json.crumb }}"

  - name: debug crumb
    debug:
      msg: "{{jenkins_crumb.json.crumb}}"

  - name: Get list of jobs
    uri:
      user: admin
      password: "{{adminPassword}}"
      force_basic_auth: yes
      url: "http://{{ groups['nodes'][0] }}:8080/api/json?tree=jobs[name]"
      return_content: yes
    register: jenkins_jobs
    until: jenkins_jobs.content.find('Please wait while Jenkins is getting ready to work') == -1
    retries: 10
    delay: 5

  - name: Check if checkbox_build exists
    set_fact:
      jenkins_checkbox_build_exists: "{{ 'checkbox_build' in (jenkins_jobs.content|from_json).jobs|map(attribute='name')|list }}"

  - name: Check if itrust_job1 exists
    set_fact:
      jenkins_itrust_job1_exists: "{{ 'itrust_job1' in (jenkins_jobs.content|from_json).jobs|map(attribute='name')|list }}"

  - name: Check if itrust_job2 exists
    set_fact:
      jenkins_itrust_job2_exists: "{{ 'itrust_job2' in (jenkins_jobs.content|from_json).jobs|map(attribute='name')|list }}" 

  - name: Create checkbox build job
    uri:
      user: admin
      password: "{{adminPassword}}"
      force_basic_auth: yes
      url: "http://{{ groups['nodes'][0] }}:8080/createItem?name=checkbox_build&{{ jenkins_crumb_token }}"
      method: POST
      headers:
        Content-Type: application/xml
      body: "{{ lookup('file','analysis-job/config.xml') }}"
    register: jenkins_checkbox_build_updated
    when: not jenkins_checkbox_build_exists

  - name: Run build job
    uri:
      user: admin
      password: "{{adminPassword}}"
      force_basic_auth: yes
      url: "http://{{ groups['nodes'][0] }}:8080/job/checkbox_build/build"
      method: POST
      headers:
        Jenkins-Crumb : "{{ jenkins_crumb.json.crumb }}"
      status_code: 201
    when: jenkins_checkbox_build_updated


  - name: Create itrust_job1
    uri:
      user: admin
      password: "{{adminPassword}}"
      force_basic_auth: yes
      url: "http://{{ groups['nodes'][0] }}:8080/createItem?name=itrust_job1&{{ jenkins_crumb_token }}"
      method: POST
      headers:
        Content-Type: application/xml
      body: "{{ lookup('file','itrust_job1/config.xml') }}"
    register: jenkins_itrust_job1_updated
    when: not jenkins_itrust_job1_exists
    


  - name: Create itrust_job2
    uri:
      user: admin
      password: "{{adminPassword}}"
      force_basic_auth: yes
      url: "http://{{ groups['nodes'][0] }}:8080/createItem?name=itrust_job2&{{ jenkins_crumb_token }}"
      method: POST
      headers:
        Content-Type: application/xml
      body: "{{ lookup('file','itrust_job2/config.xml') }}"
    when: not jenkins_itrust_job2_exists

  - name: Run itrust_job1
    uri:
      user: admin
      password: "{{adminPassword}}"
      force_basic_auth: yes
      url: "http://{{ groups['nodes'][0] }}:8080/job/itrust_job1/build"
      method: POST
      headers:
        Jenkins-Crumb : "{{ jenkins_crumb.json.crumb }}"
      status_code: 201
    when: jenkins_itrust_job1_updated
 



